$schema: '1.0'
name: devbox
tasks:
  - name: powershell
    parameters:
      command: echo "Hello, World!"
  - name: powershell
    parameters:
        command: |
          $currentUser = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
          Write-Output ('trusted system + $currentUser')
          $outDir = 'C:\provisioning\temp'
          if (-not (Test-Path $outDir)) { New-Item -Path $outDir -ItemType Directory -Force | Out-Null }
          $outFile = Join-Path $outDir 'workload-system-trusted-user.txt'
          Set-Content -Path $outFile -Value $currentUser -Encoding UTF8
  - name: ~/powershell
    parameters:
      command: |
        $currentUser = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
        Write-Output ('trusted system + $currentUser')
        $outDir = 'C:\provisioning\temp'
        if (-not (Test-Path $outDir)) { New-Item -Path $outDir -ItemType Directory -Force | Out-Null }
        $outFile = Join-Path $outDir 'workload-system-intrinsic-user.txt'
        Set-Content -Path $outFile -Value $currentUser -Encoding UTF8
  - name: ~/powershell
    parameters:
      command: |
        try {
          New-Item -Path 'HKLM:\SECURITY\SystemPrivilegeCheck' -Force -ErrorAction Stop | Out-Null
          Set-ItemProperty -Path 'HKLM:\SECURITY\SystemPrivilegeCheck' -Name 'V' -Value 'ok' -ErrorAction Stop
          'SUCCESS: wrote to HKLM:\SECURITY\SystemPrivilegeCheck'
          Remove-Item -Path 'HKLM:\SECURITY\SystemPrivilegeCheck' -Recurse -Force -ErrorAction SilentlyContinue
        } catch {
          "FAILED: $($_.Exception.Message)"
        }
userTasks:
  - name: powershell
    parameters:
      command: echo "Hello, World!"

  - name: powershell
    parameters:
      command: |
        $currentUser = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
        Write-Output ('standard trusted + $currentUser')
        $outDir = 'C:\provisioning\temp'
        if (-not (Test-Path $outDir)) { New-Item -Path $outDir -ItemType Directory -Force | Out-Null }
        $outFile = Join-Path $outDir 'workload-standard-trusted-user.txt'
        Set-Content -Path $outFile -Value $currentUser -Encoding UTF8
  - name: ~/powershell
    parameters:
      command: |
        $currentUser = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
        Write-Output ('trusted system + $currentUser')
        $outDir = 'C:\provisioning\temp'
        if (-not (Test-Path $outDir)) { New-Item -Path $outDir -ItemType Directory -Force | Out-Null }
        $outFile = Join-Path $outDir 'workload-standarduser-intrinsic-user.txt'
        Set-Content -Path $outFile -Value $currentUser -Encoding UTF8

  - name: ~/powershell
    parameters:
      command: |
        if ((whoami /priv) -match 'SeTcbPrivilege\s+Enabled') { 'SeTcbPrivilege = Enabled' } else { 'SeTcbPrivilege not enabled' }
  - name: ~/powershell
    parameters:
      command: |
        try {
          New-Item -Path 'HKLM:\SECURITY\SystemPrivilegeCheckFromUser' -Force -ErrorAction Stop | Out-Null
          Set-ItemProperty -Path 'HKLM:\SECURITY\SystemPrivilegeCheckFromUser' -Name 'V' -Value 'userattempt' -ErrorAction Stop
          'SUCCESS: wrote to HKLM:\SECURITY\SystemPrivilegeCheckFromUser'
          Remove-Item -Path 'HKLM:\SECURITY\SystemPrivilegeCheckFromUser' -Recurse -Force -ErrorAction SilentlyContinue
        } catch {
          "FAILED: $($_.Exception.Message)"
        }
  - name: powershell
    parameters:
      command: |
        # Trigger a UAC prompt for admins (consent); for standard users this prompts for credentials.
        Start-Process -FilePath 'notepad.exe' -Verb RunAs